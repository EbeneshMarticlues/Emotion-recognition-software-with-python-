import cv2
import numpy as np
from keras.models import load_model

# Load the pre-trained emotion detection model
model = load_model('emotion_detection_model.h5')

# Define the list of emotions that the model can recognize
emotions = ['angry', 'disgust', 'fear', 'happy', 'neutral', 'sad', 'surprise']

# Start capturing the video from the webcam
cap = cv2.VideoCapture(0)

while True:
    # Read the image from the webcam
    ret, img = cap.read()

    # Convert the image to grayscale
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # Detect faces in the image
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)

    # For each detected face, predict the emotion
    for (x,y,w,h) in faces:
        # Extract the face ROI
        roi_gray = gray[y:y+h, x:x+w]
        roi_gray = cv2.resize(roi_gray, (48, 48), interpolation=cv2.INTER_AREA)

        # Normalize the ROI
        roi = roi_gray.astype('float') / 255.0
        roi = np.expand_dims(roi, axis=0)
        roi = np.expand_dims(roi, axis=-1)

        # Predict the emotion
        preds = model.predict(roi)[0]
        emotion_label = emotions[preds.argmax()]

        # Display the emotion label above the face
        cv2.putText(img, emotion_label, (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0,255,0), 2)

        # Draw a rectangle around the face
        cv2.rectangle(img, (x,y), (x+w,y+h), (0,255,0), 2)

    # Display the output image
    cv2.imshow('Emotion Detection', img)

    # Break the loop if the user presses the 'q' key
    if cv2.waitKey(1) & 0xFF ==
